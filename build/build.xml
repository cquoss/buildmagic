<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
  <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
  <!ENTITY tools      SYSTEM "../tools/etc/buildmagic/tools.ent">
  <!ENTITY defaults   SYSTEM "../tools/etc/buildmagic/defaults.ent">
]>

<!-- $Id$ -->

<!--+======================================================================+-->
<!--| JBoss (The OpenSource J2EE WebOS) Build File                         |-->
<!--|                                                                      |-->
<!--| Distributable under LGPL license.                                    |-->
<!--| See terms of license at http://www.gnu.org.                          |-->
<!--|                                                                      |-->
<!--| This file has been designed to work with the 'tools' module and      |-->
<!--| Buildmagic extentions.                                               |-->
<!--+======================================================================+-->

<project default="main" name="JBoss Buildmagic">

  <!--+====================================================================+-->
  <!--| Setup                                                              |-->
  <!--|                                                                    |-->
  <!--| Include the common build elements.                                 |-->
  <!--|                                                                    |-->
  <!--| This defines several different targets, properties and paths.      |-->
  <!--| It also sets up the basic extention tasks amoung other things.     |-->
  <!--+====================================================================+-->

  &buildmagic;
  &defaults;
  &tools;


  <!--+====================================================================+-->
  <!--| Initialization                                                     |-->
  <!--|                                                                    |-->
  <!--| Initialize the build system.  Other targets should depend on       |-->
  <!--| 'init'.                                                            |-->
  <!--+====================================================================+-->

  <target name="init" depends="_buildmagic:init">
    <!-- Add module specific elements here. -->
  </target>

  <!-- fake, to keep tests target happy -->
  <target name="compile" depends="init"/>


  <!--+====================================================================+-->
  <!--| Configuration                                                      |-->
  <!--|                                                                    |-->
  <!--| This target is invoked by the Buildmagic initialization logic      |-->
  <!--| and should contain module specific configuration elements.         |-->
  <!--+====================================================================+-->

  <target name="configure" unless="configure.disable">

    <!-- Module name(s) & version -->
    <!-- =================== -->
    <!-- Basic Configuration -->
    <!-- =================== -->

    <!-- Module name(s) & version -->
    <property name="module.name" value="buildmagic"/>
    <property name="module.Name" value="Buildmagic Build"/>

    <!--+================================+-->
    <!--| Library & Module Dependencies. |-->
    <!--+================================+-->

    <!-- Configure thirdparty libraries -->
    <!--<call target="configure-libraries"/>-->
    <path id="library.classpath">
       <!-- Add thirdparty library elements here. -->
    </path>

    <!-- Configure modules -->
    <!--<call target="configure-modules"/>-->
    <path id="dependentmodule.classpath">
       <!-- Add dependent module classpath elements here. -->
    </path>

    <!--+=======================================+-->
    <!--| Override any default properties here. |-->
    <!--+=======================================+-->

    <!-- Configure defaults & build tools --> 
    <call target="configure-defaults"/>
    <call target="configure-tools"/>

    <!--+=======================================+-->
    <!--| Define module specific elements here. |-->
    <!--+=======================================+-->

    <!--+================================+-->
    <!--| Define project structure here. |-->
    <!--+================================+-->

    <!-- The group to use by default -->
    <property name="groups" value="default"/>

    <!-- Sets up the module configuration. -->
    <moduleconfig property="modules" selected="${groups}">

      <!-- Modules -->

      <!--<module name="common"/>-->
      <module name="tasks"/>

      <!-- Module groups -->

      <group name="core">
        <include modules="tasks"/>
      </group>

      <group name="default">
        <include groups="core"/>
      </group>

    </moduleconfig>

    <!-- Configure project defaults -->
    <!--<call target="configure-project"/>-->
    
    <!-- ===== -->
    <!-- Tasks -->
    <!-- ===== -->

    <!-- Skip any missing modules and issue a warning -->
    <property name="executemodules.skipmissing" value="true"/>

    <!-- The header and footer displayed during each module execution -->
    <property name="executemodules.header"><![CDATA[
    ======================================================================
    ==  Header Executing '${target}' in module '${module}'...
    ==]]></property>

    <property name="executemodules.footer"><![CDATA[
    ==
    ==  Footer Finished with '${target}' in module '${module}'.
    ======================================================================
    ]]></property>

    <property name="executemodules.exportproperties">
       version.major,
       version.minor,
       version.revision,
       version.tag,
       version.name,
       version.svntag,

       specification.title,
       specification.version,
       specification.vendor,

       implementation.title,
       implementation.version,
       implementation.vendor,
       implementation.vendor.id,
       implementation.url
    </property>


  </target>


  <!-- ================================================================== -->
  <!-- Module Pass-through Targets                                        -->
  <!-- ================================================================== -->

  <!--
     | These targets will execute all configured modules with the specified
     | target.
   -->
  <target name="modules-all" depends="_buildmagic:modules:all" />
  <target name="modules-most" depends="_buildmagic:modules:most" />
  <target name="modules-main" depends="_buildmagic:modules:main"/>
  <target name="modules-release" depends="_buildmagic:modules:release"/>
  <target name="modules-tests" depends="_buildmagic:modules:tests"/>
  <target name="modules-clean" depends="_buildmagic:modules:clean"/>
  <target name="modules-clobber" depends="_buildmagic:modules:clobber"/>
  <target name="modules-docs" depends="_buildmagic:modules:docs"/>

  <!--+====================================================================+-->
  <!--| Module Pass-through Hooks                                          |-->
  <!--|                                                                    |-->
  <!--| These hooks are executed after the above pass-through targets have |-->
  <!--| finished with a given module.                                      |-->
  <!--+====================================================================+-->

  <!-- ====== -->
  <!-- Common -->
  <!-- ====== -->

  <target name="_module-common-most">
    <property name="_module.name" value="common" override="true"/>
    <property name="_module.output" override="true"
	      value="${project.root}/${_module.name}/output"/>

    <!-- ??? -->

  </target>

  <target name="_module-common-all" depends="_module-common-most">

    <!-- ??? -->

  </target>

  <!-- ===== -->
  <!-- Tasks -->
  <!-- ===== -->

  <target name="_module-tasks-most">
    <property name="_module.name" value="tasks" override="true"/>
    <property name="_module.output" override="true"
	      value="${project.root}/${_module.name}/output"/>

    <!-- ??? -->

  </target>

  <target name="_module-tasks-all" depends="_module-tasks-most">
    <!-- Copy the generated javadocs -->
    <mkdir dir="${install.api}/${_module.name}"/>
    <copy todir="${install.api}/${_module.name}" filtering="no">
      <fileset dir="${_module.output}/api">
         <include name="**/*"/>
      </fileset>
    </copy>
  </target>


  <!--+====================================================================+-->
  <!--| Generate Output                                                    |-->
  <!--|                                                                    |-->
  <!--| Generates the target output for this module. Target output is      |-->
  <!--| the output which is ment to be released or used by external        |-->
  <!--| modules.                                                           |-->
  <!--+====================================================================+-->

  <target name="output"
	  description="Generate all target output."
	  depends="init">
    <!-- Add module specific elements here. -->
  </target>


  <!--+====================================================================+-->
  <!--| Documents                                                          |-->
  <!--|                                                                    |-->
  <!--| Generate all documentation for this module.                        |-->
  <!--+====================================================================+-->

  <target name="docs">
    <!-- Add module specific elements here. -->
  </target>


  <!--+====================================================================+-->
  <!--| Install & Release                                                  |-->
  <!--+====================================================================+-->

  <target name="release"
	  description="Builds the default release structure."
	  depends="modules-most, output, sources"/>

  <target name="release-full" 
	  description="Builds the full release structure."
	  depends="modules-most, release"/>

  <target name="sources" depends="init"
      description="Generate source dist zip">
  
      <mkdir dir="${module.output}"/>
      <zip destfile="${module.output}/buildmagic-${version.major}.${version.minor}.${version.revision}.${version.tag}-src.zip">
        <fileset dir="${project.root}">
          <exclude name="**/output/*"/>
          <include name="**/build.xml"/>
          <include name="**/ivy.xml"/>
          <include name="**/build.bat"/>
          <include name="**/build.sh"/>
          <include name="*/src/**"/>
          <include name="*/etc/**"/>
          <include name="tools/**"/>
        </fileset>
      </zip>
  </target>

  <!--+====================================================================+-->
  <!--| Misc.                                                              |-->
  <!--|                                                                    |-->
  <!--| Standard targets and psuedo-targets.                               |-->
  <!--+====================================================================+-->

  <target name="clean" depends="init, modules-clean, _buildmagic:clean"
	  description="Cleans up most generated files.">
    <!-- Add module specific elements here. -->
  </target>

  <target name="clobber" depends="_buildmagic:clobber, clean, modules-clobber"
	  description="Cleans up all generated files.">
    <!-- Add module specific elements here. -->
  </target>

  <target name="main" depends="most"
	  description="Executes the default target (most)."/>
    
  <target name="all" depends="modules-all"
	  description="Executes all modules and builds everything."/>

  <target name="most" depends="modules-most"
	  description="Executes all modules and builds most everything."/>

  <target name="help" depends="_buildmagic:help:build"
          description="Show this help message."/>

</project>
